#!/bin/bash

set -eu

# colors to log
RED='\e[31m'
YELLOW='\e[33m'
GREEN='\e[32m'
BOLDBLUE="\e[1;34m"
BOLDGREEN="\e[1;32m"
ENDCOLOR="\e[0m"

# log functions
function echo_nl {
	echo ""
}

function echo_print {
	echo -e "${BOLDBLUE}=> $1 ${ENDCOLOR}"
}

function echo_info {
	echo -e "${BOLDGREEN}[info] $1 ${ENDCOLOR}"
}

function echo_ok {
	echo -e "${GREEN}[ok] $1 ✔${ENDCOLOR}"
}

function echo_warning {
	echo -e "${YELLOW}[alert] $1 ${ENDCOLOR}"
}

function echo_error {
	echo -e "${RED}[error] ✖ $1 ✖ ${ENDCOLOR}"
}

function check_return_code {

	# The $1 is $?, the result of last command
	if [ "$1" -eq 0 ]; then
		echo_ok "$2"
	else
		echo_error "$2"
		exit 1
	fi

	echo_nl
}

# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
cd "$HOME" || exit

echo_nl

echo_print "Updating the yadm repo origin URL to ssh version"
yadm remote set-url origin "git@github.com:mstuttgart/dotfiles.git"
echo_ok "origin set"
echo_nl

Apps=(
	# basic apps
	"p7zip"
	"p7zip-full"
	"p7zip-rar"
	"rar"
	"software-properties-common"
	"ubuntu-restricted-extras"
	"unace-nonfree"
	"unrar"
	"uuid-runtime"
	"wget"
	"curl"
	"net-tools"
	"pwgen"
	"openssh-server"
	"pass"
	"bat"
	"exa"

	# i3
	"i3"
	"i3lock"
	"netctl"
	"nitrogen"
	"compton"
	"rofi"
	"light" # brightness control
	"hsetroot"
	"fonts-noto"
	"fonts-mplus"
	"xsettingsd"
	"netctl"
	"lxappearance"
	"polybar"
	"playerctl"
	"numlockx"
	"acpi" # battery info
	"gsimplecal"
	"neofetch"
	"imagemagick"

	# Programming
	"build-essential"
	"cmake"
	"g++"
	"libsqlite3-dev"
	"llvm"
	"make"
	"git"
	"tig"
	"kitty"
	"curl"

	# python
	"python3-dev"
	"python3-pip"
	"python3-venv"

	# nvim
	"exuberant-ctags"
	"ncurses-term"
	"ripgrep"
	"fd-find"
	"fzf"
	"xclip"

	# apps
	"gpick"
	"flameshot"
	"gdebi"
	"libreoffice"
	"openssh-server"
	"poedit"
	"filezilla"
	"firefox"
	"gpick"
	"gimp"
	"libreoffice"
	"poedit"

	# themes
	"arc-theme"
	"font-manager"
	"fonts-powerline"
)

echo_info "Install Ubuntu packages"

for app in "${Apps[@]}"; do
	echo_print "Installing $app"

	# Install app
	sudo apt install "$app" -y

	# The $? get result of last command
	check_return_code $? "$app"

done

echo_print "Install and configure ZSH"

echo_info "Install ZSH"
sudo apt install zsh curl -y
check_return_code $? zsh

if [ ! -d "$HOME/.zplug" ]; then
	echo_info "Install zplug"
	curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
fi

echo_info "Change Shell to Zsh"
chsh -s /bin/zsh

echo_nl

if [ ! -d "$HOME/.asdf" ]; then
	echo_print "Install and configure asdf"
  sudo apt install curl git
	git clone https://github.com/asdf-vm/asdf.git "$HOME/.asdf" --branch v0.13.1
fi
